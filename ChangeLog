TODO:
* fsextinfo output file system identifier

* rename libfsext_block_stream to libfsext_data_stream
** refactor libfsext_block_stream_initialize_from_extents to have extents and size arguments

* determine if file_entry_get_size should return non-zero size for a directory?

* get_file_entry_by_path determine Unicode form
* merge continous extents
* add support for checksums
  * add support for ext4 extents checksum
* add support for ext4 directory entry tail
* have date time functions return 0 if not set

* add support for EXT4_EA_INODE_FL
* libfsext_inode_read_data_reference
  * add support for extents header depth > 0 in inode
* add support for EXT2_COMPRBLK_FL
* add support for hash tree directories
  * can be read, but none of the hash tree data structures are used
* directory replace array by data structure that is more efficient for large
  number of comparisions, e.g. a b-tree.

Create test images:
* ext2 without dynamic inode information
* ext2 with dynamic inode information
* ext2 with +8G sparse file
* ext3 without dynamic inode information
* ext3 with dynamic inode information
* ext4 without dynamic inode information
* ext4 with dynamic inode information
* without sparse superblock
* with inode where double indirect blocks are used
* with inode where triple indirect blocks are used
* with INCOMPAT_RECOVER
* with INCOMPAT_JOURNAL_DEV
* with INCOMPAT_META_BG
* with INCOMPAT_DIRDATA - still in development
* with INCOMPAT_CSUM_SEED
* with INCOMPAT_LARGEDIR

20150429
* see `git log' for more recent change log

20110203
* 2011 updates

20101023
* Initial version

