/*
 * The internal definitions
 *
 * Copyright (C) 2010-2017, Joachim Metz <joachim.metz@gmail.com>
 *
 * Refer to AUTHORS for acknowledgements.
 *
 * This software is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this software.  If not, see <http://www.gnu.org/licenses/>.
 */

#if !defined( _LIBFSEXT_INTERNAL_DEFINITIONS_H )
#define _LIBFSEXT_INTERNAL_DEFINITIONS_H

#include <common.h>
#include <byte_stream.h>

#include "libfsext_libfdata.h"

#define LIBFSEXT_ENDIAN_BIG						_BYTE_STREAM_ENDIAN_BIG
#define LIBFSEXT_ENDIAN_LITTLE						_BYTE_STREAM_ENDIAN_LITTLE

/* Define HAVE_LOCAL_LIBFSEXT for local use of libfsext
 */
#if !defined( HAVE_LOCAL_LIBFSEXT )
#include <libfsext/definitions.h>

/* The definitions in <libfsext/definitions.h> are copied here
 * for local use of libfsext
 */
#else
#define LIBFSEXT_VERSION						@VERSION@

/* The version string
 */
#define LIBFSEXT_VERSION_STRING					"@VERSION@"

/* The file access
 * bit 1        set to 1 for read access
 * bit 2        set to 1 for write access
 * bit 3-8      not used
 */
enum LIBFSEXT_ACCESS_FLAGS
{
	LIBFSEXT_ACCESS_FLAG_READ					= 0x01,
/* Reserved: not supported yet */
	LIBFSEXT_ACCESS_FLAG_WRITE					= 0x02
};

/* The file access macros
 */
#define LIBFSEXT_OPEN_READ						( LIBFSEXT_ACCESS_FLAG_READ )
/* Reserved: not supported yet */
#define LIBFSEXT_OPEN_WRITE						( LIBFSEXT_ACCESS_FLAG_WRITE )
/* Reserved: not supported yet */
#define LIBFSEXT_OPEN_READ_WRITE					( LIBFSEXT_ACCESS_FLAG_READ | LIBFSEXT_ACCESS_FLAG_WRITE )

/* The path segment separator
 */
#define LIBFSEXT_SEPARATOR						'\\'

/* The file attribute flags
 */
enum LIBFSEXT_FILE_ATTRIBUTE_FLAGS
{
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_READ_ONLY				= 0x00000001UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_HIDDEN				= 0x00000002UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_SYSTEM				= 0x00000004UL,

	LIBFSEXT_FILE_ATTRIBUTE_FLAG_DIRECTORY				= 0x00000010UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_ARCHIVE				= 0x00000020UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_DEVICE				= 0x00000040UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_NORMAL				= 0x00000080UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_TEMPORARY				= 0x00000100UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_SPARSE_FILE			= 0x00000200UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_REPARSE_POINT			= 0x00000400UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_COMPRESSED			= 0x00000800UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_OFFLINE				= 0x00001000UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_NOT_CONTENT_INDEXED		= 0x00002000UL,
	LIBFSEXT_FILE_ATTRIBUTE_FLAG_ENCRYPTED				= 0x00004000UL,

	LIBFSEXT_FILE_ATTRIBUTE_FLAG_VIRTUAL				= 0x00010000UL
};

/* The attribute types
 */
enum LIBFSEXT_ATTRIBUTE_TYPES
{
	LIBFSEXT_ATTRIBUTE_TYPE_UNUSED					= 0x00000000UL,
	LIBFSEXT_ATTRIBUTE_TYPE_STANDARD_INFORMATION			= 0x00000010UL,
	LIBFSEXT_ATTRIBUTE_TYPE_ATTRIBUTE_LIST				= 0x00000020UL,
	LIBFSEXT_ATTRIBUTE_TYPE_FILE_NAME				= 0x00000030UL,
	LIBFSEXT_ATTRIBUTE_TYPE_OBJECT_IDENTIFIER			= 0x00000040UL,
	LIBFSEXT_ATTRIBUTE_TYPE_SECURITY_DESCRIPTOR			= 0x00000050UL,
	LIBFSEXT_ATTRIBUTE_TYPE_VOLUME_NAME				= 0x00000060UL,
	LIBFSEXT_ATTRIBUTE_TYPE_VOLUME_INFORMATION			= 0x00000070UL,
	LIBFSEXT_ATTRIBUTE_TYPE_DATA					= 0x00000080UL,
	LIBFSEXT_ATTRIBUTE_TYPE_INDEX_ROOT				= 0x00000090UL,
	LIBFSEXT_ATTRIBUTE_TYPE_INDEX_ALLOCATION			= 0x000000a0UL,
	LIBFSEXT_ATTRIBUTE_TYPE_BITMAP					= 0x000000b0UL,
	LIBFSEXT_ATTRIBUTE_TYPE_REPARSE_POINT				= 0x000000c0UL,
	LIBFSEXT_ATTRIBUTE_TYPE_EXTENDED_INFORMATION			= 0x000000d0UL,
	LIBFSEXT_ATTRIBUTE_TYPE_EXTENDED				= 0x000000e0UL,
	LIBFSEXT_ATTRIBUTE_TYPE_PROPERTY_SET				= 0x000000f0UL,
	LIBFSEXT_ATTRIBUTE_TYPE_LOGGED_UTILITY_STREAM			= 0x00000100UL,

	LIBFSEXT_ATTRIBUTE_TYPE_END_OF_ATTRIBUTES			= 0xffffffffUL
};

/* The extent flag definitions
 */
enum LIBFSEXT_EXTENT_FLAGS
{
	/* The extent is sparse
	 */
        LIBFSEXT_EXTENT_FLAG_IS_SPARSE					= 0x00000001UL,

	/* The extent is compressed
	 */
        LIBFSEXT_EXTENT_FLAG_IS_COMPRESSED				= 0x00000002UL
};

#endif

/* The attribute flags
 */
enum LIBFSEXT_ATTRIBUTE_FLAGS
{
	LIBFSEXT_ATTRIBUTE_FLAG_COMPRESSED				= 0x0001,

	LIBFSEXT_ATTRIBUTE_FLAG_SPARSE					= 0x8000
};

/* The MFT entry flags
 */
enum LIBFSEXT_MFT_ENTRY_FLAGS
{
	LIBFSEXT_MFT_ENTRY_FLAG_IN_USE					= 0x0001,
	LIBFSEXT_MFT_ENTRY_FLAG_INDEX_PRESENT				= 0x0002,
};

/* The predefined MFT entry index values
 */
enum LIBFSEXT_MFT_ENTRY_INDEXES
{
	LIBFSEXT_MFT_ENTRY_INDEX_MFT					= 0,
	LIBFSEXT_MFT_ENTRY_INDEX_MFT_MIRROR				= 1,

	LIBFSEXT_MFT_ENTRY_INDEX_VOLUME				= 3,

	LIBFSEXT_MFT_ENTRY_INDEX_ROOT_DIRECTORY			= 5,
	LIBFSEXT_MFT_ENTRY_INDEX_BITMAP				= 6,

	LIBFSEXT_MFT_ENTRY_INDEX_UPPERCASE				= 10,
};

/* The index node flags
 */
enum LIBFSEXT_INDEX_NODE_FLAGS
{
	LIBFSEXT_INDEX_NODE_FLAG_HAS_ALLOCATION_ATTRIBUTE		= 0x00000001UL,
};

/* The index value flags
 */
enum LIBFSEXT_INDEX_VALUE_FLAGS
{
	LIBFSEXT_INDEX_VALUE_FLAG_HAS_SUB_NODE				= 0x00000001UL,
	LIBFSEXT_INDEX_VALUE_FLAG_IS_LAST				= 0x00000002UL
};

/* The file name attribute (name string) namespace values
 */
enum LIBFSEXT_FILE_NAME_NAMESPACES
{
	LIBFSEXT_FILE_NAME_NAMESPACE_POSIX				= 0x00,
	LIBFSEXT_FILE_NAME_NAMESPACE_WINDOWS				= 0x01,
	LIBFSEXT_FILE_NAME_NAMESPACE_DOS				= 0x02,
	LIBFSEXT_FILE_NAME_NAMESPACE_DOS_WINDOWS			= 0x03
};

/* The file entry flags
 */
enum LIBFSEXT_FILE_ENTRY_FLAGS
{
	/* The file entry is based on MFT metadata only
	 */
	LIBFSEXT_FILE_ENTRY_FLAGS_MFT_ONLY				= 0x01
};

/* Flag to indicate the MFT entry is based on MFT metadata only
 */
#define LIBFSEXT_MFT_ENTRY_FLAG_MFT_ONLY				LIBFDATA_RANGE_FLAG_USER_DEFINED_1

/* Flag to indicate the index value in the list is stored in the $INDEX_ROOT
 */
#define LIBFSEXT_INDEX_VALUE_LIST_FLAG_STORED_IN_ROOT			LIBFDATA_RANGE_FLAG_USER_DEFINED_1

#define LIBFSEXT_DIRECTORY_ENTRIES_TREE_MAXIMUM_NUMBER_OF_SUB_NODES	257

#define LIBFSEXT_MAXIMUM_CACHE_ENTRIES_CLUSTER_BLOCKS			8
#define LIBFSEXT_MAXIMUM_CACHE_ENTRIES_INDEX_ENTRIES			32
#define LIBFSEXT_MAXIMUM_CACHE_ENTRIES_INDEX_VALUES			512
#define LIBFSEXT_MAXIMUM_CACHE_ENTRIES_MFT_ENTRIES			32

#endif

